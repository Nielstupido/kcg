//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Tiles.PlanetMap tilesPlanetMap { get { return (Tiles.PlanetMap)GetComponent(GameComponentsLookup.TilesPlanetMap); } }
    public bool hasTilesPlanetMap { get { return HasComponent(GameComponentsLookup.TilesPlanetMap); } }

    public void AddTilesPlanetMap(int newXsize, int newYsize, Tiles.PlanetTile[,] newTiles) {
        var index = GameComponentsLookup.TilesPlanetMap;
        var component = (Tiles.PlanetMap)CreateComponent(index, typeof(Tiles.PlanetMap));
        component.Xsize = newXsize;
        component.Ysize = newYsize;
        component.Tiles = newTiles;
        AddComponent(index, component);
    }

    public void ReplaceTilesPlanetMap(int newXsize, int newYsize, Tiles.PlanetTile[,] newTiles) {
        var index = GameComponentsLookup.TilesPlanetMap;
        var component = (Tiles.PlanetMap)CreateComponent(index, typeof(Tiles.PlanetMap));
        component.Xsize = newXsize;
        component.Ysize = newYsize;
        component.Tiles = newTiles;
        ReplaceComponent(index, component);
    }

    public void RemoveTilesPlanetMap() {
        RemoveComponent(GameComponentsLookup.TilesPlanetMap);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTilesPlanetMap;

    public static Entitas.IMatcher<GameEntity> TilesPlanetMap {
        get {
            if (_matcherTilesPlanetMap == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TilesPlanetMap);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTilesPlanetMap = matcher;
            }

            return _matcherTilesPlanetMap;
        }
    }
}
